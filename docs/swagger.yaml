definitions:
  app.CommentCreateModel:
    properties:
      content:
        type: string
      key:
        type: string
      replyToId:
        type: integer
      userId:
        type: integer
      userName:
        type: string
    type: object
  app.CommentModel:
    properties:
      content:
        type: string
      createdAt:
        type: string
      disLikeCount:
        type: integer
      id:
        type: integer
      likeCount:
        type: integer
      replyToId:
        type: integer
      userId:
        type: integer
      userName:
        type: string
    type: object
  app.TicketCreateModel:
    properties:
      content:
        type: string
      origin:
        type: string
      phoneNumber:
        type: string
      userId:
        type: integer
      userName:
        type: string
    type: object
  app.TicketFilterModel:
    properties:
      fromDateTime:
        type: string
      length:
        type: integer
      orderAscending:
        type: boolean
      orderCol:
        type: string
      page:
        type: integer
      search:
        type: string
      state:
        type: integer
      toDateTime:
        type: string
    type: object
  app.TicketModel:
    properties:
      content:
        type: string
      createdAt:
        type: string
      handlerUserId:
        type: integer
      id:
        type: integer
      lastStateChangeDate:
        type: string
      origin:
        type: string
      phoneNumber:
        type: string
      state:
        type: integer
      userId:
        type: integer
      userName:
        type: string
    type: object
  common.Error:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
info:
  contact: {}
paths:
  /comment:
    post:
      consumes:
      - application/json
      description: Create New Comment
      parameters:
      - description: comment data
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/app.CommentCreateModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.CommentModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.Error'
  /comment/{commentId}:
    post:
      consumes:
      - application/json
      description: Confirm Ticket
      parameters:
      - description: comment id
        in: path
        name: commentId
        required: true
        type: integer
      - description: user id
        in: query
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.CommentModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.Error'
  /comment/{key}:
    get:
      consumes:
      - application/json
      description: Confirm Ticket
      parameters:
      - description: comment group key
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/app.CommentModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.Error'
  /ticket:
    post:
      consumes:
      - application/json
      description: Create New Ticket
      parameters:
      - description: ticket data
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/app.TicketCreateModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.TicketModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.Error'
  /ticket/{ticketId}:
    get:
      consumes:
      - application/json
      description: Get Ticket By Id
      parameters:
      - description: ticket id
        in: path
        name: ticketId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.TicketModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.Error'
    post:
      consumes:
      - application/json
      description: Close Ticket
      parameters:
      - description: ticket id
        in: path
        name: ticketId
        required: true
        type: integer
      - description: is successful
        in: query
        name: successful
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.TicketModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.Error'
  /tickets:
    post:
      consumes:
      - application/json
      description: Get Tickets By Filter Model
      parameters:
      - description: filters
        in: body
        name: filterModel
        required: true
        schema:
          $ref: '#/definitions/app.TicketFilterModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/app.TicketModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.Error'
swagger: "2.0"
